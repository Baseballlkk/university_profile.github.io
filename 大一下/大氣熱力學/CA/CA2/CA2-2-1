# import library
import math as m
import numpy as np
from matplotlib import pyplot as plt


# set constant
A = 2.53*pow(10,9)
B = 5.42*pow(10,3)
epsilon = 0.622

# read data 
H, P, T, U = np.loadtxt(r"C:\Users\joe51\OneDrive\桌面\profile_ntu\大一下\大氣熱力學\CA2\46810-2018072100.edt.txt", dtype = 'float', delimiter = ',', usecols=(1,2,3,4), skiprows = 3, unpack = True)

# calculate for specific humidity
es = A*np.exp(-B/(T+273.15))
e = es*U/100
qv = (epsilon*e)/(P-(1-epsilon)*e)

# Calculate for virtual temperature
Tv = (1+(1/epsilon-1)*qv)*(T+273.15)

# Calculate for the difference
dif = Tv-(T+273.15)

s = dif/(T+273.15)

# (Tv-T)/T
plt.plot(s, H, linewidth = 0.5)
plt.title('(Tv-T)/T as Altitude Increasing', size = 15)
plt.xlim([0,np.max(s)])
plt.ylim([0,np.max(H)])
plt.xticks(np.linspace(0,np.max(s), 11))
plt.yticks(np.linspace(0,np.max(H), 21))
plt.xlabel('(Tv-T)/T', size = 15)
plt.ylabel('Altitude [m]', size = 15)

plt.show()

# calculate for relative coefficient
sxy = np.zeros(len(dif))
sxx = np.zeros(len(dif))
syy = np.zeros(len(dif))

difavg = np.sum(dif)/len(dif)
qvavg = np.sum(qv)/len(qv)

for i in range(len(s)):
	sxy[i] = (dif[i]-difavg)*(qv[i]-qvavg)
	sxx[i] = (dif[i]-difavg)**2
	syy[i] = (qv[i]-qvavg)**2

sxy1 = np.sum(sxy)
sx = np.sqrt(np.sum(sxx))
sy = np.sqrt(np.sum(syy))
r = sxy1/(sx*sy)

print(r)